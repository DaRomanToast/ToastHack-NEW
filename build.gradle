plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id "io.freefair.lombok" version "8.0.1"
	id "com.github.johnrengelman.shadow" version "7.0.0"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {url = "https://jitpack.io"}
	maven {url =  "https://marvionkirito.github.io/maven/"}
	maven {url = "https://repo.spongepowered.org/repository/maven-public/"}
	maven { url = "https://repo.viaversion.com/" }
	maven { url = "https://maven.fabricmc.net/" }
	maven { url = "https://maven.legacyfabric.net/" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven {
		name = "meteor-maven"
		url = "https://maven.meteordev.org/snapshots"
	}
	maven {url = "https://api.modrinth.com/maven"
		content {
			includeGroup "maven.modrinth"
		}
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
}

def urlFile = { url, name, version ->
	File file = new File("$rootDir/lib/${name}-${version}.jar")
	file.parentFile.mkdirs()
	if (!file.exists()) {
		new URL(url).withInputStream { downloadStream ->
			file.withOutputStream { fileOut ->
				fileOut << downloadStream
			}
		}
	}
	return [name: name, version: version]
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

	include modImplementation("com.github.SpongePowered:SpongeAPI:v7.4.0")
	include "maven.modrinth:midnightlib:${project.midnightlib_version}"
	include(implementation("com.github.FlorianMichael:DietrichEvents2:v1.0.3"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}


// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
	}
}
